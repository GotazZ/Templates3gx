00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000004 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
070012bc 00000020 t __tcf_1
070012dc 00000020 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070012fc 000000c8 T CTRPluginFramework::main()
070013c4 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070014a8 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07001688 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0700168c T svcCustomBackdoor
07001694 T svcConvertVAToPA
0700169c T svcFlushDataCacheRange
070016a4 T svcInvalidateEntireInstructionCache
070016ac T svcMapProcessMemoryEx
070016c0 T svcUnmapProcessMemoryEx
070016c8 T svcControlProcess
070016d0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07001728 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07001728 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07001788 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
070017a0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
070017c8 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
070017e4 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0700180c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700186c 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
070018c8 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070018c8 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700190c 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07001930 00000040 T CTRPluginFramework::ToggleDrawMode[abi:cxx11](unsigned long)
07001970 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
070019c8 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07001a74 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07001aec 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07001b20 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07001b30 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07001b98 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07001bac 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07001c08 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07001c1c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07001c6c 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07001d70 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07001d70 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07001d9c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07001d9c 00000018 T CTRPluginFramework::LineReader::~LineReader()
07001db4 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07001e10 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07001f0c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07001f64 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07001fa8 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07002064 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07002158 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07002230 00000008 T CTRPluginFramework::File::Tell() const
07002238 0000002c T CTRPluginFramework::File::Rewind() const
07002264 00000030 T CTRPluginFramework::File::Flush() const
07002294 00000064 T CTRPluginFramework::File::GetSize() const
070022f8 00000008 T CTRPluginFramework::File::IsOpen() const
07002300 00000044 T CTRPluginFramework::File::File()
07002300 00000044 T CTRPluginFramework::File::File()
07002344 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07002344 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
0700236c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070023e4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070023e4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07002450 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070024e4 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070025b8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700263c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070026dc 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070026f0 000000a8 T CTRPluginFramework::File::Close() const
07002798 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07002914 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07002914 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07002970 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002a0c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07002a0c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07002a80 00000048 T CTRPluginFramework::PluginMenu::Run() const
07002ac8 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07002ad0 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07002ad8 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07002ae8 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07002af4 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07002af4 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07002b24 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07002b24 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07002b3c 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07002bac 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
07002c08 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07002ccc 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07002ce8 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07002d0c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07002d44 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07002da8 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
07002e70 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07002e78 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07002edc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07002f34 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07002f48 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
07002f60 00000028 T OnLoadCro
07002f88 000000ac T CTRPluginFramework::ThreadExit()
07003034 00000054 T abort
07003088 000000c8 T __entrypoint
07003150 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07003150 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07003178 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070031f8 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0700326c 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
070032a0 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
07003990 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07003a40 0000020c T CTRPluginFramework::Initialize()
07003c4c 00000044 T CTRPluginFramework::ThreadInit(void*)
07003c90 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07003cd8 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07003d08 000000b8 t NCSNDCmd_Add
07003dc0 00000084 t NCSNDCmd_Execute.constprop.0
07003e44 00000068 T ncsndNotifyAptEvent
07003eac 00000004 t ncsndAptHook
07003eb0 000001c8 T ncsndInit
07004078 000000ac T ncsndExit
07004124 00000024 T ncsndInitializeSound
07004148 00000264 T ncsndPlaySound
070043ac 00000040 T ncsndStopSound
070043ec 00000090 T ncsndIsPlaying
0700447c T LoadCROHooked
07004490 T AR__ExecuteRoutine
070044b8 t stackBak
070044c0 0000003c T __syscall_getreent
070044fc 0000000c T __aeabi_read_tp
07004508 0000003c T __getThreadLocalStorage
07004544 00000070 T __syscall_gettod_r
070045b4 00000004 T __syscall_lock_acquire
070045b8 00000004 T __syscall_lock_release
070045bc 00000004 T __syscall_lock_acquire_recursive
070045c0 00000004 T __syscall_lock_release_recursive
070045c4 00000054 T initThreadVars
07004618 0000005c T __system_initSyscalls
07004674 00000020 T __libctru_exit
07004694 0000001c T __appExit
070046b0 00000190 T __createThread
07004840 00000110 T __startThread
07004950 00000024 T threadGetHandle
07004974 0000002c T threadFree
070049a0 00000024 T threadJoin
070049c4 00000020 T threadGetCurrent
070049e4 0000003c T threadExit
07004a20 00000020 t _thread_begin
07004a40 0000004c T hidInitFake
07004a8c 0000003c T hidExitFake
07004ac8 0000002c T hidSetSharedMem
07004af4 00000070 T plgLdrExit
07004b64 000000d4 T plgLdrInit
07004c38 00000050 T PLGLDR__GetPluginPath
07004c88 00000024 T PLGLDR__FetchEvent
07004cac 000000e8 T PLGLDR__Reply
07004d94 000000b0 T __system_allocateHeaps
07004e44 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
07004e70 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
07004e98 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
07004fec 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0700506c 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
07005094 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
070050bc 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07005120 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
070051f0 00000004 T __gsp__Update
070051f4 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0700547c 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
07005494 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
070054b4 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
070054fc 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
07005530 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
07005554 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
07005578 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
070055b4 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
070055e0 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
07005670 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
070056a4 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0700574c 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
070058c8 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07005904 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
07005924 0000002c T CTRPluginFramework::GetLocalFriendCode(unsigned long long*)
07005950 000000b8 T CTRPluginFramework::SystemImpl::Initialize()
07005a08 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
07005a58 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
07005a70 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
07005a8c 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07005ac8 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07005ae8 00000044 T CTRPluginFramework::SystemImpl::Status()
07005b2c 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07005d68 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07005dc0 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07005eb8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005f48 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
070061c8 00000048 T CTRPluginFramework::Screenshot::Initialize()
07006210 00000380 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07006590 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07006620 00000310 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07006930 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07006974 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07006a48 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07006a6c 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006a6c 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006adc 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07006bdc 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07006c2c 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07006d0c 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07006d68 00000028 T CTRPluginFramework::ScreenImpl::Release()
07006d90 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07006e00 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07006e40 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07006ed8 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07006f1c 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07006fe8 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07006ff0 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07007050 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070070a0 0000003c T CTRPluginFramework::ScreenImpl::Clean()
070070dc 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07007168 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
070071d8 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07007208 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07007268 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
0700727c 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07007298 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
070072b4 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
070072bc 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
070072c4 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
070072cc 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
070072e8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07007304 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07007358 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07007384 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
070073dc 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07007438 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
07007448 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
070074f4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
070074f4 00000060 T CTRPluginFramework::Scheduler::Core::Core()
07007554 00000098 T CTRPluginFramework::Scheduler::Initialize()
070075ec 0000004c T CTRPluginFramework::Scheduler::Exit()
07007638 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07007638 00000020 W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07007658 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07007698 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
070076dc 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0700771c 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
070078c0 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
070079c4 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
07007a1c 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
07007b5c 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
07007cd0 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07007d14 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
07007d9c 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07007de8 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07007e7c 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07007eb8 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07007ef0 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07007f54 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07007fc4 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07008058 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07008100 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07008138 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
07008154 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0700816c t _store_reg_loop
0700818c 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07008198 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07008198 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
070081c0 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
070082ac 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
070082e8 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
070083a4 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
070087c8 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07008834 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07008914 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07008920 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07008954 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07008960 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07008978 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
070089b8 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
070089fc 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07008a0c 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07008a20 00000004 T Kernel::Initialize()
07008a24 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07008a3c 0000000c T KProcess::GetCurrent()
07008a48 00000024 T KProcess::PatchCore2Access()
07008a6c 0000002c T KProcess::PatchCategory(unsigned long)
07008a98 00000014 T KProcess__PatchCategory
07008aac 0000002c T KProcess::PatchMaxPriority(unsigned long)
07008ad8 00000014 T KProcess__PatchMaxPriority
07008aec 00000028 T KProcess::PatchMaxThreads()
07008b14 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
07008b34 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
07008b48 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
07008d88 00000044 W CTRPluginFramework::Lock::~Lock()
07008d88 00000044 W CTRPluginFramework::Lock::~Lock()
07008dcc 000000d4 T CTRPluginFramework::HookManager::HookManager()
07008dcc 000000d4 T CTRPluginFramework::HookManager::HookManager()
07008ea0 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
07008f14 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
07008f78 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
07009048 0000000c T CTRPluginFramework::HookManager::Lock()
07009054 0000000c T CTRPluginFramework::HookManager::Unlock()
07009060 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
070090c8 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
07009140 000000c8 T __hook__CheckTlsValue
07009208 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0700934c 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
070093d0 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0700952c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
07009538 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0700957c 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
070095a0 00000004 t addrMapNodeDestructor(rbtree_node*)
070095a4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
070096e8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
070096f0 0000006c T CTRPluginFramework::Heap::Free(void*)
0700975c 0000000c T CTRPluginFramework::Heap::SpaceFree()
07009768 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07009774 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07009794 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070097ec 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700986c 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07009b20 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
07009b5c 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07009d30 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009d30 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07009df4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07009e00 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
07009e34 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07009e8c 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
07009e94 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
07009e98 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
07009e9c 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
07009ee4 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07009f08 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
07009f4c 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0700a074 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700a104 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0700a304 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700a310 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0700a360 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0700a38c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700a38c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700a3b4 00000024 W CTRPluginFramework::File::~File()
0700a3b4 00000024 W CTRPluginFramework::File::~File()
0700a3d8 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700a3d8 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700a410 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700a430 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700a430 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700a538 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700a558 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700a6e8 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700a708 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700a724 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700a740 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0700a750 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0700a758 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0700a760 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700a768 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700a770 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700a770 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700a7b4 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700a7b4 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700a7dc 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700a7dc 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700a804 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0700a93c 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0700a978 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700a978 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700a9c8 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700aac8 00000764 T CTRPluginFramework::PluginMenuImpl::Run()
0700b22c 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0700b27c 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0700b31c 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700b420 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700b420 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700b494 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700b62c 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700b74c 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700b8f0 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0700b938 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0700b9e8 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0700ba24 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700bb58 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700bc98 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700bca4 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700bcb8 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700bcb8 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700be5c 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700be5c 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700c020 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700c078 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700c138 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700c224 000000bc t __tcf_1
0700c2e0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700c338 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700c660 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700c794 000004a8 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700cc3c 00000110 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700cd4c 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700cddc 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0700ce14 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0700ce40 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700cf2c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0700cfb0 00000080 T CTRPluginFramework::PluginMenuHome::Init()
0700d030 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0700d08c 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
0700d14c 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d14c 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0700d5f8 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0700d728 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700d778 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0700d800 000003b0 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0700dbb0 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0700ddd4 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
0700ddf8 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0700de5c 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0700dec0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700dec0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0700defc 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0700e034 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0700e1b0 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0700e208 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0700e39c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0700e3b4 000000e8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0700e49c 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700e65c 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
0700e744 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0700e904 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0700e9ec 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
0700ea74 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0700ea88 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0700eaac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700eb04 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700eb44 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700eb84 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0700ebd8 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0700ebfc 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0700ec24 00000030 W CTRPluginFramework::ARCode::~ARCode()
0700ec24 00000030 W CTRPluginFramework::ARCode::~ARCode()
0700ec54 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0700ec88 00000014 t __tcf_1
0700ec9c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700ed1c 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0700ee3c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
0700ee98 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
0700ef7c 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700efd8 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0700f150 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
0700f26c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700f26c 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0700f4c0 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
0700f68c 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700f790 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
0700f908 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0700fa28 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0700fa64 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
0700fbb0 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0700fbec 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
0700fcf0 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0700ff5c 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07010028 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070101e4 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07010384 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07010394 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070103a4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070103b4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070103bc 00000024 t std::_Vector_base<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070103e0 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070103e0 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07010410 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07010430 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07010430 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07010514 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07010534 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07010544 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07010594 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
070105ac 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070105d0 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07010680 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07010690 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070106b0 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07010798 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070107f0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070107f0 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070108c4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
070108d8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07010930 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07010930 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07010958 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07010978 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07010980 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07010994 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
070109a0 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
070109a8 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
070109cc 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
070109fc 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07010a18 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07010a80 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010a80 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07010b6c 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07010d70 00000018 W CTRPluginFramework::Clock::Clock()
07010d70 00000018 W CTRPluginFramework::Clock::Clock()
07010d88 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07010dc4 00000058 T CTRPluginFramework::Menu::CloseAll()
07010e1c 00000030 T CTRPluginFramework::Menu::~Menu()
07010e1c 00000030 T CTRPluginFramework::Menu::~Menu()
07010e4c 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07010e58 00000008 T CTRPluginFramework::Menu::GetFolder() const
07010e60 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07010e68 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07010eac 000003b4 T CTRPluginFramework::Menu::Draw() const
07011260 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
070112ec 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07011378 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
070115bc 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701172c 00000068 T CTRPluginFramework::Menu::ShowNote()
07011794 00000008 T CTRPluginFramework::Menu::CloseNote()
0701179c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
070117a4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070117a4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07011888 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07011888 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070119b4 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07011a08 00000044 T CTRPluginFramework::Menu::Pop()
07011a4c 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07011b00 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07011b58 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07011b80 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
07011bb8 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
07011bf8 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
07011c0c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07011c0c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07011c88 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07011c90 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07011c98 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07011ca0 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07011ca8 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07011cb0 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07011cb8 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07011d14 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
07011ee0 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070123c0 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07012584 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
070125c4 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701262c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070126bc 00000078 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07012734 0000007c T CTRPluginFramework::KeyboardImpl::_ScrollDown()
070127b0 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701290c 00000170 T CTRPluginFramework::KeyboardImpl::_Update(float)
07012a7c 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07012adc 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07012b50 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07012bf8 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07013114 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701311c 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0701311c 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07013144 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
070131b8 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07013218 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07013304 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07013330 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07013418 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07013444 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07013704 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07013768 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070137c8 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701381c 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07013870 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070138c8 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070139bc 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07013a10 0000072c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701413c 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
070141b8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070141ec 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070141ec 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070143c4 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070143c4 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701458c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
070145b8 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
070146d0 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070147a8 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07014878 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07014948 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07015204 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07015310 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701541c 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070155c4 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0701560c 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07015660 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
070160b4 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07016630 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07016bac 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07016bec 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07016c38 000004bc T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
070170f4 0000037c T CTRPluginFramework::KeyboardImpl::Run()
07017470 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
07017470 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
070174a8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
070174d4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070174d4 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070174d8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070174d8 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
070174dc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070174dc 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
070174e0 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
070174f8 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07017510 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07017528 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
070176c4 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07017800 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
070178f4 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07017934 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701798c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070179cc 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
070179cc 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
07017b18 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07017b34 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07017b50 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07017bc4 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07017bf0 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07017c2c 00000010 T CTRPluginFramework::HexEditor::Refresh()
07017c3c 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07017c80 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07017cb8 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07017ce4 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07017d64 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07017df8 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07017ec4 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07017f84 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07018034 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
070181e8 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
070181f8 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07018208 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07018218 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
07018258 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
070182c4 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07018398 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070183f0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07018470 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07018470 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07018670 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
07018838 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701891c 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
070189d4 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07018c34 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07018db8 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07018e48 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070190f8 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
07019368 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
07019548 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
070195a8 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701972c 000001c8 T CTRPluginFramework::HexEditor::_Update()
070198f4 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07019b80 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07019bd8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07019c18 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07019c4c 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07019f90 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
07019f90 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701a178 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701a24c 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701a624 0000015c T CTRPluginFramework::GuideReader::Draw()
0701a780 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701a7f4 000000e4 T CTRPluginFramework::Converter::Converter()
0701a7f4 000000e4 T CTRPluginFramework::Converter::Converter()
0701a8d8 00000010 T CTRPluginFramework::Converter::Instance()
0701a8e8 00000110 T CTRPluginFramework::Converter::_Draw()
0701a9f8 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0701ac20 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0701ae38 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701ae64 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0701aea0 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701aedc 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701af18 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701af54 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0701af90 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701afbc 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0701aff8 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701b034 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0701b070 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701b0ac 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0701b0d8 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701b114 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0701b140 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701b16c 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0701b198 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701b1d4 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0701b200 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0701b23c 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701b268 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0701b29c 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701b2d8 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0701b304 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0701b340 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0701b36c 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701b398 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0701b3c4 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0701b3f0 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0701b41c 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701b448 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0701b474 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0701b4a0 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0701b4dc 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0701b508 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
0701b524 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0701b558 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0701b558 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0701b614 00000028 T CTRPluginFramework::Window::~Window()
0701b614 00000028 T CTRPluginFramework::Window::~Window()
0701b63c 00000064 T CTRPluginFramework::Window::Draw() const
0701b6a0 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0701b77c 00000018 T CTRPluginFramework::Window::DrawButton() const
0701b794 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0701b7ac 00000018 T CTRPluginFramework::Window::MustClose() const
0701b7c4 00000028 T CTRPluginFramework::Window::Close() const
0701b7ec 00000004 T CTRPluginFramework::Window::GetRect() const
0701b7f0 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
0701b824 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0701b8a4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
0701b8c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0701b8c4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0701b8d8 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0701b8d8 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0701b900 00000024 T CTRPluginFramework::UIContainer::Draw()
0701b924 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0701b958 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0701ba40 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0701ba74 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0701ba74 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0701bae8 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0701baf0 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
0701bb24 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0701bbf0 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0701bcd8 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0701bcf0 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
0701bd04 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
0701bd1c 00000048 T CTRPluginFramework::TouchKeyString::operator()()
0701bd64 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
0701bd6c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0701bd6c 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0701be18 00000008 W CTRPluginFramework::Drawable::operator()()
0701be20 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
0701bf04 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701bf5c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0701bf5c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
0701bfe8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0701bfe8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
0701c0a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0701c0a0 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0701c12c 0000004c T CTRPluginFramework::TouchKey::Clear()
0701c178 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0701c178 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0701c198 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
0701c1b8 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
0701c1c0 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
0701c1c8 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0701c238 00000070 T CTRPluginFramework::TouchKey::Draw()
0701c2a8 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
0701c2b0 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
0701c398 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c398 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c46c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0701c46c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0701c53c 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701c6a4 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0701c6a8 000002fc T CTRPluginFramework::TextBox::Draw()
0701c9a4 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0701c9d0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701ca28 00000094 T CTRPluginFramework::TextBox::TextBox()
0701ca28 00000094 T CTRPluginFramework::TextBox::TextBox()
0701cabc 0000000c T CTRPluginFramework::TextBox::Open() const
0701cac8 0000000c T CTRPluginFramework::TextBox::Close() const
0701cad4 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0701cadc 0000023c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0701cd18 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0701cd24 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0701cdb8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0701ce6c 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0701cebc 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0701cf5c 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
0701d198 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0701d198 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0701d31c 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701d47c 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0701d5a8 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
0701d6c4 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0701d868 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0701da30 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
0701da94 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
0701dccc 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0701e274 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
0701e6f8 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0701e76c 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0701e7dc 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0701e860 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0701e9e0 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701ebd4 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0701ec74 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0701ee60 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0701ee90 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0701f000 00000020 t __tcf_1
0701f020 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
0701f20c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0701f3b0 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0701f4c4 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0701f558 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701f5fc 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0701f8b4 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0701f904 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0701fa08 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
0701fa48 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
070200e4 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702027c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070202c8 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07020590 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07020654 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070207a0 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070207c0 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070207e0 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0702080c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07020840 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07020868 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07020890 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070208b0 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070208e0 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07020928 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0702096c 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07020ab0 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07020adc 00000040 t __tls_init
07020adc 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07020b1c 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07020b68 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07020c04 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07020c98 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07020d48 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07020e04 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07020ec0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
07020f14 0000000c T CTRPluginFramework::OSDImpl::Lock()
07020f20 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07020f3c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07020f48 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07021030 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
070211c4 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07021270 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070212a0 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702137c 0000008c T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07021408 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0702146c 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07021518 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07021548 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07021558 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
070216c4 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07021728 00000124 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07021728 00000124 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702184c 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
0702192c 000000d0 T CTRPluginFramework::InstallOSD()
070219fc 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07021aa8 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07021aa8 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07021ad0 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07021b84 000001a4 T CTRPluginFramework::OSDImpl::Update()
07021d28 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
07021d80 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07021e48 000005d4 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0702241c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070224a8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0702253c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070225ac 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07022628 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07022628 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07022648 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07022668 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07022700 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07022738 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07022798 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070227a8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070227b0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070227bc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070227bc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07022824 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07022918 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07022928 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0702299c 00000024 t fontGetSystemFont
070229c0 00000010 T CTRPluginFramework::Glyph::Width() const
070229d0 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07022eb4 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07023200 000000c4 T CTRPluginFramework::Font::Initialize()
070232c4 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
070232e0 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0702346c 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07023534 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07023660 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
070236ec 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0702370c 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07023754 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
070237cc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070237cc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070237d0 00000014 T CTRPluginFramework::FloatingButton::Draw()
070237e4 00000014 T CTRPluginFramework::FloatingButton::operator()()
070237f8 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07023810 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070239a8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070239a8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070239e8 00000094 T CTRPluginFramework::ComboBox::Draw()
07023a7c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07023af4 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07023af4 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07023b48 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
07023b68 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07023b68 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07023bb4 0000003c T CTRPluginFramework::ComboBox::Clear()
07023bf0 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07023c70 000000a8 T CTRPluginFramework::ComboBox::operator()()
07023d18 000000e8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07023e00 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07023e50 0000015c T CTRPluginFramework::Button::Draw()
07023fac 00000070 T CTRPluginFramework::Button::operator()()
0702401c 0000018c T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
070241a8 00000038 T CTRPluginFramework::Button::~Button()
070241a8 00000038 T CTRPluginFramework::Button::~Button()
070241e0 00000020 T CTRPluginFramework::Button::~Button()
07024200 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07024200 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07024394 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07024394 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070243b4 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070243b4 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702444c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702444c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07024460 00000018 T CTRPluginFramework::Button::Enable(bool)
07024478 00000010 T CTRPluginFramework::Button::Enable()
07024488 00000010 T CTRPluginFramework::Button::Disable()
07024498 00000010 T CTRPluginFramework::Button::Lock()
070244a8 00000010 T CTRPluginFramework::Button::Execute()
070244b8 00000018 T CTRPluginFramework::Button::SetState(bool)
070244d0 00000010 T CTRPluginFramework::Button::GetState() const
070244e0 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070244e8 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07024510 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07024534 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07024558 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07024558 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07024590 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07024598 00000008 T CTRPluginFramework::BMPImage::Width() const
070245a0 00000008 T CTRPluginFramework::BMPImage::Height() const
070245a8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070245b0 00000010 T CTRPluginFramework::BMPImage::data() const
070245c0 0000001c T CTRPluginFramework::BMPImage::end() const
070245dc 00000014 W CTRPluginFramework::BMPImage::DataClear()
070245f0 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070245f0 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702467c 00000034 T CTRPluginFramework::BMPImage::Unload()
070246b0 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
070246f8 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07024728 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
070247f8 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07024864 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07024888 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
070249a4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070249a4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070249f8 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07024bd4 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07024d00 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
07024dd4 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07024ddc 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07024ed8 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
070251f0 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070251f0 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070252a0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070252f8 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07025400 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07025438 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
070254e0 00000140 T ARM_Disasm::Decode01(unsigned long)
07025620 00000028 T ARM_Disasm::Decode10(unsigned long)
07025648 00000078 T ARM_Disasm::Decode11(unsigned long)
070256c0 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
07025714 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07025764 00000110 T ARM_Disasm::DecodeALU(unsigned long)
07025874 000000c4 T ARM_Disasm::Decode00(unsigned long)
07025938 00000030 T ARM_Disasm::Decode(unsigned long)
07025968 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070259e8 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07025d44 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07025dbc 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07025e2c 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07025eac 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
070262f4 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07026514 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
070265b8 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
07026678 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07026738 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
070267e8 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
07026878 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
070269f0 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07026b04 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07026b68 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07026bfc 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07026f50 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702724c 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702729c 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702729c 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07027314 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
07027334 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027334 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027380 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070273e8 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07027480 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
070275b0 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
070275d4 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
070275f8 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702761c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07027644 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702766c 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07027694 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07027794 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070277e4 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702780c 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
07027918 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07029368 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07029418 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07029438 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
070294ac 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070295f8 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
07029958 00000020 t __tcf_1
07029978 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
07029990 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
070299b8 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
070299d0 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
07029a20 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029a70 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029ab8 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07029b0c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07029b0c 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
07029b5c 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
07029b7c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07029c28 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
07029c68 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07029cd0 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07029dc0 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07029ec4 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
07029ed4 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07029fec 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0702a024 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702a4dc 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702a630 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702ad7c 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702ae2c 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702af6c 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0702afac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702b004 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702b02c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702b02c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702b02c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702b02c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702b078 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702b0bc 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702b0bc 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702b0dc 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702b110 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702b170 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702b1b0 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702b1b0 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702b2f4 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0702b5ac 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0702b608 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0702b658 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0702b6c0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702b76c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702b76c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702b7e4 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702b820 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0702b854 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0702cca8 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
0702cd34 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0702cd94 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
0702cdd0 00000030 t __tcf_1
0702ce00 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702cf2c 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
0702cf68 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0702d25c 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0702d8e4 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0702da8c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0702db44 0000046c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0702dfb0 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0702e37c 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0702e570 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702e5c8 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702e658 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702e694 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702e694 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702e6b8 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702e6e0 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702e6e0 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702e714 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
0702e7c4 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702e7c4 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702e8d4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702e8d4 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702e9f8 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702eae8 00000084 T CTRPluginFramework::ARCode::Update()
0702eb6c 0000003c T CTRPluginFramework::ARCodeContext::Update()
0702eba8 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702ec68 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0702ec88 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0702ecb4 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0702edbc 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
0702eeb0 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0702ef10 00000004 T CTRPluginFramework::Preferences::Initialize()
0702ef14 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
0702f128 000000bc T CTRPluginFramework::Preferences::LoadSettings()
0702f1e4 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0702f240 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0702f2fc 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0702f3b8 00000158 T CTRPluginFramework::Preferences::WriteSettings()
0702f510 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
0702f71c 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702f7c4 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0702f7f0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702f848 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0702f888 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f944 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
0702f97c 0000005c T CTRPluginFramework::InitializeRandomEngine()
0702f9d8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702fa58 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702fab4 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
0702faf8 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0702fb54 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
0702fbd4 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
0702fcb0 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0702ff4c 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07030050 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07030084 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070301c0 00000720 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070308e0 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070308e8 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703092c 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
070309f4 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07030a48 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07030ac8 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07030ae4 00000024 t __tcf_0
07030b08 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b08 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07030b30 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07030b7c 00000048 T CTRPluginFramework::LineWriter::Flush()
07030bc4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030bc4 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07030be0 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030c44 00000018 T CTRPluginFramework::LineWriter::Close()
07030c5c 00000028 T CTRPluginFramework::Touch::IsDown()
07030c84 00000028 T CTRPluginFramework::Touch::GetPosition()
07030cac 00000020 T CTRPluginFramework::Time::AsSeconds() const
07030ccc 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07030cf4 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07030d24 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07030db4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07030db4 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07030de8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07030de8 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07030e08 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07030e5c 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07030ea4 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07030eac 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
0703101c 00000218 T __ctrpf_getThreadVars
07031234 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
0703126c 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
070312a4 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070312a4 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070312a8 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
070312ac 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
070312dc 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
070312f4 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
070312fc 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07031330 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07031330 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
070313dc 00000048 T CTRPluginFramework::Task::Start() const
07031424 0000004c T CTRPluginFramework::Task::Start(void*) const
07031470 00000064 T CTRPluginFramework::Task::Wait() const
070314d4 00000010 T CTRPluginFramework::System::IsNew3DS()
070314e4 00000010 T CTRPluginFramework::System::Reboot()
070314f4 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07031534 00000010 T CTRPluginFramework::Process::GetHandle()
07031544 00000010 T CTRPluginFramework::Process::GetTitleID()
07031554 00000024 T CTRPluginFramework::Process::GetTextSize()
07031578 00000008 T CTRPluginFramework::Process::Pause()
07031580 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07031590 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07031638 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0703163c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07031688 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070316a8 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070316c8 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
070316e8 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
0703170c 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07031768 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070317a0 0000000c T CTRPluginFramework::HookContext::GetCurrent()
070317ac 00000028 T CTRPluginFramework::HookContext::GetCallCode()
070317d4 00000048 T CTRPluginFramework::Hook::Hook()
070317d4 00000048 T CTRPluginFramework::Hook::Hook()
0703181c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
0703181c 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07031844 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07031844 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07031858 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
070318bc 00000050 T CTRPluginFramework::Hook::~Hook()
070318bc 00000050 T CTRPluginFramework::Hook::~Hook()
0703190c 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07031928 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07031950 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07031960 0000001c T CTRPluginFramework::Hook::IsEnabled()
0703197c 00000120 T CTRPluginFramework::Hook::Enable()
07031a9c 00000030 T CTRPluginFramework::Hook::Disable()
07031acc 00000008 T CTRPluginFramework::Hook::GetContext() const
07031ad4 0000000c T CTRPluginFramework::FwkSettings::Get()
07031ae0 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07031bac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07031c04 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
07031c7c 00000048 T CTRPluginFramework::Directory::Close() const
07031cc4 00000008 T CTRPluginFramework::Directory::IsOpen() const
07031ccc 00000040 T CTRPluginFramework::Directory::Directory()
07031ccc 00000040 T CTRPluginFramework::Directory::Directory()
07031d0c 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07031d40 0000007c T CTRPluginFramework::Directory::~Directory()
07031d40 0000007c T CTRPluginFramework::Directory::~Directory()
07031dbc 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07031e1c 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07031e1c 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07031e68 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07031e7c 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031f14 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07031fb8 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703208c 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032120 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070321cc 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070321d8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07032268 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070322a4 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032380 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070324cc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070324cc 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07032524 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07032524 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07032540 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0703265c 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
070326e0 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07032748 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070327fc 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07032840 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07032a2c 00000288 T CTRPluginFramework::Directory::_List() const
07032cb4 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07032d88 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07032e64 0000003c T CTRPluginFramework::Controller::Update()
07032ea0 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07032ea4 0000000c T CTRPluginFramework::Sound::Sound()
07032ea4 0000000c T CTRPluginFramework::Sound::Sound()
07032eb0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07032eb0 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07032ec4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07032ec4 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07032ef8 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07032f88 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07032ff8 00000058 T CTRPluginFramework::Sound::~Sound()
07032ff8 00000058 T CTRPluginFramework::Sound::~Sound()
07033050 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07033068 00000040 T CTRPluginFramework::Sound::Play(int, int)
070330a8 00000008 T CTRPluginFramework::Sound::Play(int)
070330b0 00000008 T CTRPluginFramework::Sound::Play()
070330b8 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070330b8 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033100 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07033100 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703313c 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0703313c 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0703317c 00000008 T CTRPluginFramework::MessageBox::operator()() const
07033184 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07033184 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070331ac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07033204 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0703320c 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0703320c 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07033254 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07033284 0000001c T CTRPluginFramework::HotkeyManager::Count()
070332a0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07033320 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
070333a8 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
070334e0 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
0703355c 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07033658 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07033720 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07033868 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
0703389c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0703389c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070338cc 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070338d4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703392c 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070339ec 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070339ec 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033a34 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07033a34 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07033aa0 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07033aa0 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07033ad0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07033ad8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07033af4 00000044 T CTRPluginFramework::Keyboard::Open() const
07033b38 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07033bd0 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07033bd8 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07033be0 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07033be8 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07033cb8 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07033d4c 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07033ddc 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07033ea0 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07033f30 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07033ff4 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07034084 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07034148 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070341f4 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
070342c4 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070343c8 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
070344cc 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070345d0 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07034644 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070346cc 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
070347b4 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703483c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703483c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703484c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703484c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
07034868 00000110 T CTRPluginFramework::Color::Fade(float)
07034978 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
070349b8 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07034a34 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07034c54 00000384 t cwav_initialize
07034fd8 000000f4 t cwav_stopImpl.part.0
070350cc 00000004 T cwavUseEnvironment
070350d0 00000034 T cwavSetVAToPACallback
07035104 00000050 T cwavLoad
07035154 000004d8 T cwavPlay
0703562c 00000064 T cwavStop
07035690 00000170 T cwavFree
07035800 0000003c T fontEnsureMappedExtension
0703583c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07035868 00000034 W MemPool::DelBlock(MemBlock*)
0703589c 0000005c T MemPool::CoalesceRight(MemBlock*)
070358f8 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
070359f4 00000100 T MemPool::Deallocate(MemChunk const&)
07035af4 00000020 T MemPool::GetFreeSpace()
07035b14 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07035b14 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
07035bb4 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
07035c04 00000030 T CTRPluginFramework::EventManager::Clear()
07035c34 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
07035e1c 00000070 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
07035e8c 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
07036180 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0703624c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07036254 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07036254 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07036318 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07036320 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
07036338 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07036338 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07036360 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070365f0 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07036898 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07036b28 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07036b5c 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07036e78 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07036e78 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07036ebc 0000001c T CTRPluginFramework::SubMenu::operator()()
07036ed8 000001fc T CTRPluginFramework::SubMenu::Draw()
070370d4 000000d4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070371a8 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070371b0 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070371cc 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
07037204 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07037204 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07037288 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07037434 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07037448 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0703745c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
07037470 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07037474 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
07037478 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070374a0 000000bc t __tcf_1
0703755c 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0703759c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070375f4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07037634 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
07037658 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0703766c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07037680 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07037694 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
070376a8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070376bc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070376d0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
070376e4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
070376f8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0703770c 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0703785c 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
070379a8 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
070379e8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07037a68 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
07037be8 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07037ca8 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07037d0c 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
07038838 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070388a0 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
070389a8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070389a8 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07038b38 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07038be4 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
07038c54 00000114 W std::__cxx11::to_string(int)
07038d68 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07038ef8 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039064 00000048 t CTRPluginFramework::Reboot()
070390ac 00000054 t CTRPluginFramework::Shutdown()
07039100 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0703914c 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07039288 000001fc t CTRPluginFramework::UpdateScreenshotText()
07039484 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
070398e4 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07039a14 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07039b78 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07039bac 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07039bf0 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0703a24c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703a26c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0703a2b4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0703a2f0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0703a300 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703a358 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703a398 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0703a4b0 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0703a508 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0703a518 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0703a54c 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0703a578 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0703a5e8 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0703a6d4 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0703a710 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0703a790 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0703a7f0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0703a95c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703a95c 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0703adcc 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0703b030 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0703b070 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0703b11c 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0703b3d8 0000016c t CTRPluginFramework::ClearSearchFolder()
0703b544 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0703b62c 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0703bc1c 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0703bc58 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0703bf48 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703c2f4 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
0703c314 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703c314 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703c334 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0703c354 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0703c3ac 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703c3ac 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703c430 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c430 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c490 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c490 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c4f0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0703c4f4 00000030 t CTRPluginFramework::GetIndex(int)
0703c524 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0703c658 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0703c6cc 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703c6cc 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0703c738 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0703c7cc 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0703c998 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0703c9c4 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703c9c4 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0703c9fc 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0703cb0c 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703cb48 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cb48 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703cca4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703ccfc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703ccfc 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703cd48 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703cdf8 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0703ce90 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0703cf80 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703d000 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703d360 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0703d49c 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703d4c4 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703d578 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703d5a8 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0703d5f8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703d664 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0703d8e4 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0703dc10 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0703dcd4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703dcd4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703de4c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703de4c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703dfa4 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0703e264 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
0703e458 00000004 T cwav_defaultVAToPA
0703e45c 00000004 T cwavEnvUseEnvironment
0703e460 00000008 T cwavEnvGetEnvironment
0703e468 00000004 T cwavEnvInitialize
0703e46c 00000004 T cwavEnvFinalize
0703e470 00000014 T cwavEnvCompatibleEncoding
0703e484 00000008 T cwavEnvGetChannelAmount
0703e48c 00000018 T cwavEnvIsChannelAvailable
0703e4a4 000000f4 T cwavEnvPlay
0703e598 00000004 T cwavEnvChannelIsPlaying
0703e59c 00000004 T cwavEnvStop
0703e5a0 00000044 T CTRPluginFramework::Search::UpdateProgress()
0703e5e4 00000050 T CTRPluginFramework::Search::Cancel()
0703e634 00000184 T CTRPluginFramework::Search::CheckNextRegion()
0703e7b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703e810 0000015c W std::__cxx11::to_string(unsigned long)
0703e96c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703e9ec 00000008 T CTRPluginFramework::Search::GetHeader() const
0703e9f4 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0703ea3c 0000000c T CTRPluginFramework::Search::GetType() const
0703ea48 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0703ea60 00000070 T CTRPluginFramework::Search::WriteHeader()
0703ead0 00000058 T CTRPluginFramework::Search::WriteResults()
0703eb28 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0703eb70 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0703ec5c 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0703ece0 00000144 T CTRPluginFramework::Search::ExecuteSearch()
0703ee24 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703ee24 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f014 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703f014 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0703f264 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0703f490 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0703f560 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
0703f624 00000064 W CTRPluginFramework::Search::~Search()
0703f624 00000064 W CTRPluginFramework::Search::~Search()
0703f688 00000044 T CTRPluginFramework::Search32::~Search32()
0703f688 00000044 T CTRPluginFramework::Search32::~Search32()
0703f6cc 00000020 T CTRPluginFramework::Search32::~Search32()
0703f6ec 00000024 W CTRPluginFramework::Search::~Search()
0703f710 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703f710 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0703f914 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f914 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703f934 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703f934 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0703f9c8 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0703fad4 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0703fc88 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0703fd88 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
0703ff24 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0704005c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070400a8 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070401ec 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07040330 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0704036c 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
070403d4 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070404ac 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
070404e8 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07040568 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07040660 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070406ac 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070409d8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07040a30 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07040a70 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07040b24 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07040b7c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07040bfc 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07040bfc 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07040c90 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07040c90 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07040d30 00000198 T CTRPluginFramework::SearchMenu::Update()
07040ec8 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07041054 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
070410d0 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0704122c 0000014c T CTRPluginFramework::SearchMenu::_Export()
07041378 000005b8 T CTRPluginFramework::SearchMenu::Draw()
07041930 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
07041a4c 0000053c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07041f88 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070428a8 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070431b8 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07043aa0 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070446f4 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044b78 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045000 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704547c 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045aa4 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704672c 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046e88 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047290 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047964 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048208 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048b30 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049454 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a238 00000084 W envGetHandle
0704a2bc 00000050 W envDestroyHandles
0704a30c 00000094 T fontEnsureMapped
0704a3a0 00000100 T fontGlyphIndexFromCodePoint
0704a4a0 00000070 T fontGetCharWidthInfo
0704a510 00000074 T osConvertVirtToPhys
0704a584 00000054 T osGetTimeRef
0704a5d8 000000ec T osGetTime
0704a6c4 0000012c T srvInit
0704a7f0 00000058 T srvExit
0704a848 000000a0 T srvGetServiceHandleDirect
0704a8e8 00000038 T srvGetServiceHandle
0704a920 00000038 T srvPublishToSubscriber
0704a958 0000000c T __sync_init
0704a964 00000018 T __sync_fini
0704a97c 0000002c T syncArbitrateAddressWithTimeout
0704a9a8 0000001c T LightLock_Init
0704a9c4 000000ac T LightLock_Lock
0704aa70 00000040 T LightLock_Unlock
0704aab0 00000024 T RecursiveLock_Init
0704aad4 00000030 T RecursiveLock_Lock
0704ab04 00000078 T RecursiveLock_TryLock
0704ab7c 00000054 T RecursiveLock_Unlock
0704abd0 00000040 T LightEvent_Init
0704ac10 000000a4 T LightEvent_Clear
0704acb4 00000048 T LightEvent_Pulse
0704acfc 000000c8 T LightEvent_Signal
0704adc4 000000a0 T LightEvent_Wait
0704ae64 00000014 T LightSemaphore_Init
0704ae78 00000094 T LightSemaphore_Acquire
0704af0c 00000064 T LightSemaphore_Release
0704af70 000000b4 t mappableFindAddressWithin
0704b024 00000028 T mappableInit
0704b04c 00000080 T mappableAlloc
0704b0cc 00000004 T mappableFree
0704b0d0 0000008c T acInit
0704b15c 0000003c T acExit
0704b198 000000a4 T amInit
0704b23c 0000003c T amExit
0704b278 00000158 T aptSendCommand
0704b3d0 00000030 T aptHook
0704b400 00000030 T aptUnhook
0704b430 00000028 T APT_PrepareToCloseApplication
0704b458 00000048 T APT_CloseApplication
0704b4a0 0000007c T APT_CheckNew3DS
0704b51c 00000048 T APT_GetSharedFont
0704b564 000000a4 T cfguInit
0704b608 0000003c T cfguExit
0704b644 00000054 T CFGU_GetSystemLanguage
0704b698 000000a4 T frdInit
0704b73c 0000003c T frdExit
0704b778 00000054 T FRD_GetMyFriendKey
0704b7cc 00000040 T FRD_PrincipalIdToFriendCode
0704b80c 000000cc T fsInit
0704b8d8 0000003c T fsExit
0704b914 000000cc T FSUSER_OpenFile
0704b9e0 000000bc T FSUSER_DeleteFile
0704ba9c 000000f8 T FSUSER_RenameFile
0704bb94 000000bc T FSUSER_DeleteDirectoryRecursively
0704bc50 000000d4 T FSUSER_CreateFile
0704bd24 000000c4 T FSUSER_CreateDirectory
0704bde8 000000f8 T FSUSER_RenameDirectory
0704bee0 000000b4 T FSUSER_OpenDirectory
0704bf94 00000094 T FSUSER_OpenArchive
0704c028 00000058 T FSFILE_Read
0704c080 00000060 T FSFILE_Write
0704c0e0 00000038 T FSFILE_GetSize
0704c118 00000028 T FSFILE_SetSize
0704c140 0000003c T FSFILE_Close
0704c17c 00000024 T FSFILE_Flush
0704c1a0 00000028 T FSFILE_SetPriority
0704c1c8 00000050 T FSDIR_Read
0704c218 0000003c T FSDIR_Close
0704c254 000000f0 T gspExit
0704c344 00000024 W hidShouldUseIrrst
0704c368 0000018c T hidInit
0704c4f4 000000e8 T hidExit
0704c5dc 000002a4 T hidScanInput
0704c880 00000010 T hidKeysHeld
0704c890 00000010 T hidKeysDown
0704c8a0 00000010 T hidKeysUp
0704c8b0 00000018 T hidTouchRead
0704c8c8 00000160 T irrstInit
0704ca28 000000cc T irrstExit
0704caf4 000000b4 T irrstScanInput
0704cba8 00000024 T irrstKeysHeld
0704cbcc 0000000c T srvPmGetSessionHandle
0704cbd8 000000b4 T sslcInit
0704cc8c 00000048 T sslcExit
0704ccd4 00000048 T sslcGenerateRandomData
0704cd1c 00000074 T rbtree_find
0704cd90 00000010 T rbtree_init
0704cda0 000001b0 t do_insert
0704cf50 00000008 T rbtree_insert
0704cf58 00000318 T rbtree_remove
0704d270 00000090 T rbtree_rotate
0704d300 00000064 T decode_utf16
0704d364 0000013c T decode_utf8
0704d4a0 00000054 T encode_utf16
0704d4f4 000000e0 T encode_utf8
0704d5d4 000000c0 T utf8_to_utf16
0704d694 T svcQueryMemory
0704d6c4 T svcExitProcess
0704d6cc T svcCreateThread
0704d6ec T svcExitThread
0704d6f4 T svcSleepThread
0704d6fc T svcSetThreadPriority
0704d704 T svcReleaseMutex
0704d70c T svcCreateEvent
0704d720 T svcSignalEvent
0704d728 T svcClearEvent
0704d730 T svcMapMemoryBlock
0704d738 T svcUnmapMemoryBlock
0704d740 T svcCreateAddressArbiter
0704d754 T svcArbitrateAddress
0704d76c T svcArbitrateAddressNoTimeout
0704d774 T svcCloseHandle
0704d77c T svcWaitSynchronization
0704d784 T svcWaitSynchronizationN
0704d7ac T svcDuplicateHandle
0704d7c0 T svcGetSystemTick
0704d7c8 T svcGetSystemInfo
0704d7e0 T svcGetProcessInfo
0704d7f8 T svcConnectToPort
0704d80c T svcSendSyncRequest
0704d814 T svcOpenProcess
0704d828 T svcGetProcessId
0704d83c T svcGetThreadId
0704d850 T svcBreak
0704d858 T svcInvalidateProcessDataCache
0704d860 T svcFlushProcessDataCache
0704d868 T svcKernelSetState
0704d870 T svcQueryProcessMemory
0704d894 0000005c T rbtree_node_next
0704d8f0 00000004 T operator delete(void*)
0704d8f4 00000004 T operator delete(void*, std::nothrow_t const&)
0704d8f8 00000004 T operator delete(void*, unsigned int)
0704d8fc 00000004 T operator delete[](void*)
0704d900 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704d90c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704d918 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704d924 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704d930 00000038 t (anonymous namespace)::init()
0704d968 00000024 t (anonymous namespace)::init_static_cond()
0704d98c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704d98c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704d9ac 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704d9d8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704d9d8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704d9f8 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704da24 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704da24 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704da44 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704da70 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704da70 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704da90 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704dabc 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704dae8 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704db14 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704db40 000001a4 T __cxa_guard_acquire
0704dce4 000000b0 T __cxa_guard_release
0704dd94 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704dd94 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704ddb4 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704dde0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704dde0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
0704ddf0 00000014 T std::get_new_handler()
0704de04 0000005c T operator new(unsigned int)
0704de60 0000001c T operator new(unsigned int, std::nothrow_t const&)
0704de7c 00000004 T operator new[](unsigned int)
0704de80 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704de80 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704dea0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0704decc 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704e004 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704e08c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704e0d0 00000004 T std::type_info::~type_info()
0704e0d0 00000004 T std::type_info::~type_info()
0704e0d4 00000008 T std::type_info::__is_pointer_p() const
0704e0d4 00000008 T std::type_info::__is_function_p() const
0704e0dc 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0704e0f0 00000014 T std::__detail::_List_node_base::_M_unhook()
0704e104 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0704e15c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0704e1cc 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0704e450 0000002c T std::__throw_bad_alloc()
0704e47c 0000002c T std::__throw_bad_array_new_length()
0704e4a8 00000040 T std::__throw_logic_error(char const*)
0704e4e8 00000040 T std::__throw_invalid_argument(char const*)
0704e528 00000040 T std::__throw_length_error(char const*)
0704e568 00000040 T std::__throw_out_of_range(char const*)
0704e5a8 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0704e5b8 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
0704e6a0 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
0704e780 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
0704e7c4 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
0704e904 0000000c T std::bad_alloc::what() const
0704e910 00000020 T std::bad_alloc::~bad_alloc()
0704e910 00000020 T std::bad_alloc::~bad_alloc()
0704e930 0000002c T std::bad_alloc::~bad_alloc()
0704e95c 0000000c T std::bad_array_new_length::what() const
0704e968 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704e968 00000020 T std::bad_array_new_length::~bad_array_new_length()
0704e988 0000002c T std::bad_array_new_length::~bad_array_new_length()
0704e9b4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0704ea10 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0704ea24 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704ea24 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0704ea44 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0704ea70 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0704ead4 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704eb50 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704ec24 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0704ed3c 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0704ee10 00000044 T __cxa_allocate_exception
0704ee54 0000002c T __cxa_free_exception
0704ee80 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0704f034 T __cxa_end_cleanup
0704f044 00000134 T __cxa_type_match
0704f178 000000b4 T __cxa_begin_cleanup
0704f22c 000000b4 T __gnu_end_cleanup
0704f2e0 000000cc T __cxa_begin_catch
0704f3ac 000000e0 T __cxa_end_catch
0704f48c 00000004 T std::exception::~exception()
0704f48c 00000004 T std::exception::~exception()
0704f490 00000004 T std::bad_exception::~bad_exception()
0704f490 00000004 T std::bad_exception::~bad_exception()
0704f494 0000000c T transaction clone for std::exception::what() const
0704f494 0000000c T std::exception::what() const
0704f4a0 0000000c T transaction clone for std::bad_exception::what() const
0704f4a0 0000000c T std::bad_exception::what() const
0704f4ac 00000018 T std::bad_exception::~bad_exception()
0704f4c4 0000003c t eh_globals_dtor(void*)
0704f500 00000038 T __cxa_get_globals_fast
0704f538 00000074 T __cxa_get_globals
0704f5ac 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0704f5ec 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0704f620 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0704f78c 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0704f7e4 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0704f8bc 000006a0 T __gxx_personality_v0
0704ff5c 00000014 T __cxxabiv1::__terminate(void (*)())
0704ff70 00000018 T std::terminate()
0704ff88 0000000c T __cxxabiv1::__unexpected(void (*)())
0704ff94 00000018 T std::unexpected()
0704ffac 00000014 T std::get_terminate()
0704ffc0 00000014 T std::get_unexpected()
0704ffd4 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07050034 00000054 T __cxa_init_primary_exception
07050088 00000054 T __cxa_throw
070500dc 000000b0 T __cxa_rethrow
0705018c 00000008 T std::logic_error::what() const
0705018c 00000008 T std::runtime_error::what() const
07050194 00000098 T std::logic_error::~logic_error()
07050194 00000098 T std::logic_error::~logic_error()
0705022c 00000098 T std::length_error::~length_error()
0705022c 00000098 T std::length_error::~length_error()
070502c4 00000098 T std::invalid_argument::~invalid_argument()
070502c4 00000098 T std::invalid_argument::~invalid_argument()
0705035c 00000098 T std::out_of_range::~out_of_range()
0705035c 00000098 T std::out_of_range::~out_of_range()
070503f4 000000a0 T std::logic_error::~logic_error()
07050494 000000a0 T std::length_error::~length_error()
07050534 000000a0 T std::invalid_argument::~invalid_argument()
070505d4 000000a0 T std::out_of_range::~out_of_range()
07050674 000000d4 T std::logic_error::logic_error(char const*)
07050674 000000d4 T std::logic_error::logic_error(char const*)
07050748 00000020 T std::invalid_argument::invalid_argument(char const*)
07050748 00000020 T std::invalid_argument::invalid_argument(char const*)
07050768 00000020 T std::length_error::length_error(char const*)
07050768 00000020 T std::length_error::length_error(char const*)
07050788 00000020 T std::out_of_range::out_of_range(char const*)
07050788 00000020 T std::out_of_range::out_of_range(char const*)
070507a8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
0705082c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07050830 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
070508a0 0000002c T __cxa_call_terminate
070508cc 00000150 T __cxa_call_unexpected
07050a20 0000013c T ceil
07050b5c 00000068 T roundf
07050bc8 0000027c T log2
07050e44 000000c0 T ceilf
07050f08 00000144 T floor
0705104c 000000c0 T floorf
0705110c 00000024 t with_errno
07051130 00000050 T __math_divzero
07051180 0000001c T __math_invalid
0705119c 00000044 T __popcountsi2
070511e0 00000030 T __aeabi_f2lz
070511e0 00000030 T __fixsfdi
07051210 00000040 T __aeabi_f2ulz
07051210 00000040 T __fixunssfdi
07051250 00000120 T __udivmoddi4
07051370 00000018 t selfrel_offset31
07051388 00000090 t search_EIT_table
07051418 00000040 t __gnu_unwind_get_pr_addr
07051458 0000010c t get_eit_entry
07051564 00000088 t restore_non_core_regs
070515ec 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07051600 00000004 t _Unwind_DebugHook
07051604 00000064 t unwind_phase2
07051668 00000140 t unwind_phase2_forced
070517a8 000000a4 T __gnu_Unwind_RaiseException
0705184c 00000028 T __gnu_Unwind_ForcedUnwind
07051874 00000074 T __gnu_Unwind_Resume
070518e8 00000020 T __gnu_Unwind_Resume_or_Rethrow
07051908 00000004 T _Unwind_Complete
0705190c 00000018 T _Unwind_DeleteException
07051924 0000006c T _Unwind_VRS_Get
07051990 0000002c t _Unwind_GetGR
070519bc 0000006c T _Unwind_VRS_Set
07051a28 0000002c t _Unwind_SetGR
07051a54 000000c0 T __gnu_Unwind_Backtrace
07051b14 00000410 t __gnu_unwind_pr_common
07051f24 00000008 T __aeabi_unwind_cpp_pr0
07051f2c 00000008 W __aeabi_unwind_cpp_pr1
07051f34 00000008 W __aeabi_unwind_cpp_pr2
07051f3c 00000424 T _Unwind_VRS_Pop
07052360 00000064 t next_unwind_byte
070523c4 0000002c t _Unwind_GetGR.constprop.0
070523f0 00000004 t unwind_UCB_from_context
070523f4 00000464 T __gnu_unwind_execute
07052858 00000048 T __gnu_unwind_frame
070528a0 00000010 T _Unwind_GetRegionStart
070528b0 0000001c T _Unwind_GetLanguageSpecificData
070528cc 00000008 T _Unwind_GetDataRelBase
070528d4 00000008 T _Unwind_GetTextRelBase
070528dc 000000e4 T strncmp
070529c0 00000130 T strchr
07052af0 00000024 T getenv
07052b14 0000005c T strlen
07052b70 00000150 T memmove
07052cc0 0000012c t iso_year_adjust
07052dec 0000126c t __strftime.isra.0
07054058 00000030 T strftime
07054088 0000000c T abs
07054094 00000064 t sulp
070540f8 000013a4 T _strtod_l
070554a0 00000108 T strtof
070555a8 00000010 T ctime
070555b8 00000068 T sprintf
07055620 000000e0 T memchr
07055700 000000f0 t rshift
070557f0 0000089c T __gethex
0705608c 000000d8 T memcmp
07056164 000001d8 t _strtoul_l.isra.0
0705633c 00000030 T _strtoul_r
0705636c 00000034 T strtoul
070563a0 00000018 T isxdigit
070563b8 00000010 T _tzset_unlocked
070563c8 00000020 T calloc
070563e8 000000ac T _vsnprintf_r
07056494 00000038 T vsnprintf
070564cc 0000000c T labs
070564d8 00000148 T _fclose_r
07056620 0000000c T __gettzinfo
0705662c 000000c0 T _calloc_r
070566ec 00000020 T asctime
0705670c 0000012c T __smakebuf_r
07056838 00000020 T realloc
07056858 00000020 T memalign
07056878 0000001c t stdio_exit_handler
07056894 0000005c t cleanup_stdio
070568f0 00000154 t global_stdio_init.part.0
07056a44 0000005c T __sinit
07056aa0 0000000c T __sfp_lock_acquire
07056aac 0000000c T __sfp_lock_release
07056ab8 0000000c T __tz_lock
07056ac4 0000000c T __tz_unlock
07056ad0 0000079c T _malloc_r
0705726c 000000f8 T _malloc_trim_r
07057364 000002e8 T _free_r
0705764c 0000064c t get_arg
07057c98 00003324 T _svfprintf_r
0705afbc 00000018 T isspace
0705afd4 00000048 T strnlen
0705b01c 00000664 T _tzset_unlocked_r
0705b680 0000000c T __errno
0705b68c 00000018 T malloc
0705b6a4 00000018 T free
0705b6bc 0000011c T memcpy
0705b7d8 000000d4 T sniprintf
0705b8ac 0000004c T time
0705b8f8 000000c8 T _findenv_r
0705b9c0 00000018 T _getenv_r
0705b9d8 000000f4 T memset
0705bacc 000004a0 T _realloc_r
0705bf6c 00000080 T asctime_r
0705bfec 00000070 T _fwalk_sglue
0705c05c 0000000c T __malloc_lock
0705c068 0000000c T __malloc_unlock
0705c074 00000254 T __tzcalc_limits
0705c2c8 000000f0 T strcpy
0705c3b8 00000014 T atexit
0705c3cc 00000020 T localtime
0705c3ec 000000d4 T snprintf
0705c4c0 000000c4 T strncpy
0705c584 0000025c t _strtoull_l.isra.0
0705c7e0 00000030 T _strtoull_r
0705c810 00000028 T _wcsrtombs_r
0705c838 0000064c t get_arg
0705ce84 00002218 T _svfiprintf_r
0705f09c 0000004c T __match
0705f0e8 0000029c T __hexnan
0705f384 00000084 T __libc_init_array
0705f408 0000022c T __sflush_r
0705f634 00000094 T _fflush_r
0705f6c8 00000010 T nan
0705f6d8 0000000c T nanf
0705f6e8 00000088 T frexp
0705f770 00000068 T siprintf
0705f7d8 0000000c T __env_lock
0705f7e4 0000000c T __env_unlock
0705f7f0 0000005c T __assert_func
0705f84c 00000088 T _Balloc
0705f8d4 0000001c T _Bfree
0705f8f0 000000f4 T __multadd
0705f9e4 00000110 T __s2b
0705faf4 00000060 T __hi0bits
0705fb54 0000009c T __lo0bits
0705fbf0 000000a4 T __i2b
0705fc94 00000204 T __multiply
0705fe98 00000128 T __pow5mult
0705ffc0 00000140 T __lshift
07060100 00000058 T __mcmp
07060158 000001fc T __mdiff
07060354 00000068 T __ulp
070603bc 000000d0 T __b2d
0706048c 00000124 T __d2b
070605b0 00000078 T __ratio
07060628 00000088 T __copybits
070606b0 0000005c T __any_on
0706070c 00000024 T __locale_mb_cur_max
07060730 000000a4 T __ssprint_r
070607d4 0000003c T fiprintf
07060810 0000014c T _memalign_r
0706095c 00000188 T _wcsnrtombs_l
07060ae4 00000064 T _wcsnrtombs_r
07060b48 000002f8 T __utf8_mbtowc
07060e40 00000078 T siscanf
07060eb8 00000044 T __sread
07060efc 00000008 T __seofread
07060f04 00000068 T __swrite
07060f6c 00000044 T __sseek
07060fb0 00000008 T __sclose
07060fb8 00000024 T _localeconv_r
07060fdc 000001b4 t quorem
07061190 00001218 T _dtoa_r
070623a8 000000a0 T _wcrtomb_r
07062448 000001b0 t _strtol_l.part.0
070625f8 00000060 T _strtol_r
07062658 000000b0 T __register_exitproc
07062708 00000128 T __ssputs_r
07062830 00000360 T localtime_r
07062b90 000000f0 T __utf8_wctomb
07062c80 00000268 T gmtime_r
07062ee8 0000064c t get_arg
07063534 00002300 T _vfiprintf_r
07065834 000000b8 t __sbprintf
070658ec 00000050 t get_arg
0706593c 000000e0 T _sungetc_r
07065a1c 0000006c T __ssrefill_r
07065a88 000000c4 T _sfread_r
07065b4c 000022cc T __ssvfiscanf_r
07067e18 00000030 T __sprint_r
07067e48 00000008 T iswspace
07067e50 000000f0 T __sccl
07067f40 000000b4 T _mbrtowc_r
07067ff4 00000138 T __swsetup_r
0706812c 000000a8 T __submore
070681d4 00000038 T iswspace_l
0706820c 000004b4 T __sfvwrite_r
070686c0 00000234 t _strtoll_l.isra.0
070688f4 00000030 T _strtoll_r
07068924 00000090 T category
070689b4 00000078 T _fstat_r
07068a2c 0000002c T __getreent
07068a58 00000030 T _gettimeofday_r
07068a88 0000003c T __get_handle
07068ac4 000000f4 T _close_r
07068bb8 00000008 t null_write
07068bc0 00000008 T _isatty_r
07068bc8 00000084 T _lseek_r
07068c4c 00000080 T _read_r
07068ccc 00000078 W _sbrk_r
07068d44 0000001c T __libc_lock_acquire
07068d60 0000001c T __libc_lock_release
07068d7c 0000001c T __libc_lock_acquire_recursive
07068d98 0000001c T __libc_lock_release_recursive
07068db4 00000080 T _write_r
07068e34 00000038 T __aeabi_d2lz
07068e34 00000038 T __fixdfdi
07068e70 00000040 T __aeabi_d2ulz
07068e70 00000040 T __fixunsdfdi
07068eb0 T _fini
0706bb38 00000014 r CTRPluginFramework::defaultSoundFiles
0706bb4c 00000014 V vtable for CTRPluginFramework::MenuItem
0706bb60 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0706bb74 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0706bb90 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706bbb0 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706bbd0 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706bbf0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706bbf8 0000001c R vtable for CTRPluginFramework::TouchKey
0706bc14 0000001c R vtable for CTRPluginFramework::TextBox
0706bc30 00000a00 r font
0706c630 00000058 r CTRPluginFramework::g_OSDPattern
0706c688 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706c6a4 0000001c R vtable for CTRPluginFramework::FloatingButton
0706c6c0 0000001c R vtable for CTRPluginFramework::ComboBox
0706c6dc 0000001c R vtable for CTRPluginFramework::Button
0706c6f8 00000040 r RegNames
0706c738 00000010 r shift_names
0706c748 00000040 r cond_names
0706c788 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706c7a4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706c7ac 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706c7b4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706c7bc 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706c7d0 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706c7dc 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706c860 00000008 R CTRPluginFramework::Time::Zero
0706c868 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0706c884 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706c88c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706c8a4 00000004 R CTRPluginFramework::Color::SkyBlue
0706c8a8 00000004 R CTRPluginFramework::Color::Orange
0706c8ac 00000004 R CTRPluginFramework::Color::LimeGreen
0706c8b0 00000004 R CTRPluginFramework::Color::ForestGreen
0706c8b4 00000004 R CTRPluginFramework::Color::Gainsboro
0706c8b8 00000004 R CTRPluginFramework::Color::DimGrey
0706c8bc 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706c8c0 00000004 R CTRPluginFramework::Color::DarkGrey
0706c8c4 00000004 R CTRPluginFramework::Color::Brown
0706c8c8 00000004 R CTRPluginFramework::Color::BlackGrey
0706c8cc 00000004 R CTRPluginFramework::Color::Green
0706c8d0 00000004 R CTRPluginFramework::Color::Gray
0706c8d4 00000004 R CTRPluginFramework::Color::Silver
0706c8d8 00000004 R CTRPluginFramework::Color::Magenta
0706c8dc 00000004 R CTRPluginFramework::Color::Cyan
0706c8e0 00000004 R CTRPluginFramework::Color::Yellow
0706c8e4 00000004 R CTRPluginFramework::Color::Blue
0706c8e8 00000004 R CTRPluginFramework::Color::Red
0706c8ec 00000004 R CTRPluginFramework::Color::White
0706c8f0 00000004 R CTRPluginFramework::Color::Black
0706c8f4 00000384 r UserManualFilled15_array
0706cc78 00000384 r Unsplash15_array
0706cffc 00000384 r UnCheckedCheckbox_array
0706d380 000009c4 r TrashFilled25_array
0706dd44 000009c4 r Trash25_array
0706e708 00000384 r Star15_array
0706ea8c 00000384 r Shutdown15_array
0706ee10 00000384 r Settings15_array
0706f194 00000384 r Search15_array
0706f518 000009c4 r Save25_array
0706fedc 00001900 r Rocket40_array
070717dc 00000384 r Restart15_array
07071b60 00000384 r RAM15_array
07071ee4 000009c4 r PlusFilled25_array
070728a8 000009c4 r Plus25_array
0707326c 00000384 r More15_array
070735f0 00000384 r Maintenance15_array
07073974 000009c4 r KeyboardFilled25_array
07074338 000009c4 r Keyboard25_array
07074cfc 000009c4 r InfoFilled25_array
070756c0 000009c4 r Info25_array
07076084 00000384 r HandCursor15_array
07076408 00000384 r Grid15_array
0707678c 000009c4 r GameControllerFilled25_array
07077150 000009c4 r GameController25_array
07077b14 00000384 r GameController15_array
07077e98 00000384 r FolderFilled_array
0707821c 00000384 r File15_array
070785a0 00000384 r EnterKeyFilled15_array
07078924 00000384 r EnterKey15_array
07078ca8 000009c4 r EditFilled25_array
0707966c 000009c4 r Edit25_array
0707a030 000009c4 r DuplicateFilled25_array
0707a9f4 000009c4 r Duplicate25_array
0707b3b8 00000e10 r DefaultKeyboardCustomIcon_array
0707c1c8 000009c4 r CutFilled25_array
0707cb8c 000009c4 r Cut25_array
0707d550 00000384 r Controller15_array
0707d8d4 00000640 r CloseWindowFilled20_array
0707df14 00000640 r CloseWindow20_array
0707e554 000009c4 r ClipboardFilled25_array
0707ef18 000009c4 r Clipboard25_array
0707f8dc 00000384 r ClearSymbolFilled15_array
0707fc60 00000384 r ClearSymbol15_array
0707ffe4 00000384 r CheckedCheckbox_array
07080368 00000384 r CapsLockOnFilled15_array
070806ec 00000384 r CapsLockOn15_array
07080a70 000009c4 r AddFavoriteFilled25_array
07081434 000009c4 r AddFavorite25_array
07081df8 00000384 r About15_array
0708217c 00000023 r CTRPluginFramework::g_copyrightText
0708219f 0000001e r CTRPluginFramework::g_ctrpfText
070821c0 0000001c R vtable for CTRPluginFramework::MenuEntryTools
070821dc 00000038 r CTRPluginFramework::stable
07082214 00000038 r CTRPluginFramework::ktable
0708224c 00000038 R vtable for CTRPluginFramework::Search
07082284 00000038 R vtable for CTRPluginFramework::Search32
070822bc 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
070822e4 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
070822f0 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0708231c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07082328 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07082354 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07082360 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07082388 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07082394 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
070823a8 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
070823bc 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
070823d0 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
070823e4 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07082408 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07082414 00000014 R vtable for __gnu_cxx::recursive_init_error
07082428 00000001 R std::nothrow
0708242c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07082454 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07082460 0000002c R vtable for __cxxabiv1::__si_class_type_info
0708248c 0000000d R typeinfo name for std::type_info
0708249c 00000008 R typeinfo for std::type_info
070824a4 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
070824b4 00000404 R std::__detail::__prime_list
070828b8 00000018 V typeinfo name for std::_Sp_make_shared_tag
070828d0 0000000d R typeinfo name for std::bad_alloc
070828e0 0000000c R typeinfo for std::bad_alloc
070828ec 00000014 R vtable for std::bad_alloc
07082900 00000019 R typeinfo name for std::bad_array_new_length
0708291c 0000000c R typeinfo for std::bad_array_new_length
07082928 00000014 R vtable for std::bad_array_new_length
0708293c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07082960 0000000c R typeinfo for __cxxabiv1::__class_type_info
0708296c 0000002c R vtable for __cxxabiv1::__class_type_info
07082998 0000000d R typeinfo name for std::exception
070829a8 00000008 R typeinfo for std::exception
070829b0 00000012 R typeinfo name for std::bad_exception
070829c4 0000000c R typeinfo for std::bad_exception
070829d0 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070829f0 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070829f8 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07082a1c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07082a24 00000014 R vtable for std::bad_exception
07082a38 00000010 R typeinfo name for std::logic_error
07082a48 0000000c R typeinfo for std::logic_error
07082a54 00000015 R typeinfo name for std::invalid_argument
07082a6c 0000000c R typeinfo for std::invalid_argument
07082a78 00000011 R typeinfo name for std::length_error
07082a8c 0000000c R typeinfo for std::length_error
07082a98 00000011 R typeinfo name for std::out_of_range
07082aac 0000000c R typeinfo for std::out_of_range
07082ab8 00000014 R vtable for std::logic_error
07082acc 00000014 R vtable for std::invalid_argument
07082ae0 00000014 R vtable for std::length_error
07082af4 00000014 R vtable for std::out_of_range
07082b08 00000890 R __log2_data
07083398 00000014 r fpinan.0
070833ac 00000014 r fpi.1
070833c0 00000028 r tinytens
070833e8 00000100 R __hexdig
070834e8 000000fc R _C_time_locale
070835e4 00000010 r zeroes.0
070835f4 00000010 r blanks.1
07083604 00000101 R _ctype_
07083708 00000024 r mon_name.0
0708372c 00000015 r day_name.1
07083744 00000010 r zeroes.0
07083754 00000010 r blanks.1
07083764 0000006c R __action_table
070837d0 0000006c R __state_table
0708383c 00000100 R __chclass
0708393c 0000000c r p05.0
07083948 00000028 R __mprec_bigtens
07083970 000000c8 R __mprec_tens
07083a38 00000060 R __month_lengths
07083a98 00000010 r zeroes.0
07083aa8 00000010 r blanks.1
07083ab8 00000022 r basefix.0
07083adc 000035dc r categories
070870b8 00000080 R dotab_stdnull
07087138 R __tdata_align
07087298 R __exidx_start
070874c0 R __exidx_end
070874c0 00000004 D cwavCurrentVAPAConvCallback
070874c4 00000001 D CTRPluginFramework::g_keepRunning
070874c5 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
070874c6 00000001 D CTRPluginFramework::SystemImpl::Language
070874c8 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
070874e0 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
070874f8 00000004 D CTRPluginFramework::Screenshot::Screens
070874fc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
07087500 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
07087518 00000004 D CTRPluginFramework::RendererPriv::g_customColor
0708751c 000001f4 D opcode_names
07087710 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07087714 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708772c 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
07087744 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708775c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07087760 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07087778 00000004 D CTRPluginFramework::FwkSettings::Header
0708777c 00000004 D g_charPerSheet
07087780 00000004 D UserManualFilled15
07087784 00000004 D Unsplash15
07087788 00000004 D UnCheckedCheckbox
0708778c 00000004 D TrashFilled25
07087790 00000004 D Trash25
07087794 00000004 D Star15
07087798 00000004 D Shutdown15
0708779c 00000004 D Settings15
070877a0 00000004 D Search15
070877a4 00000004 D Save25
070877a8 00000004 D Rocket40
070877ac 00000004 D Restart15
070877b0 00000004 D RAM15
070877b4 00000004 D PlusFilled25
070877b8 00000004 D Plus25
070877bc 00000004 D More15
070877c0 00000004 D Maintenance15
070877c4 00000004 D KeyboardFilled25
070877c8 00000004 D Keyboard25
070877cc 00000004 D InfoFilled25
070877d0 00000004 D Info25
070877d4 00000004 D HandCursor15
070877d8 00000004 D Grid15
070877dc 00000004 D GameControllerFilled25
070877e0 00000004 D GameController25
070877e4 00000004 D GameController15
070877e8 00000004 D FolderFilled
070877ec 00000004 D File15
070877f0 00000004 D EnterKeyFilled15
070877f4 00000004 D EnterKey15
070877f8 00000004 D EditFilled25
070877fc 00000004 D Edit25
07087800 00000004 D DuplicateFilled25
07087804 00000004 D Duplicate25
07087808 00000004 D DefaultKeyboardCustomIcon
0708780c 00000004 D CutFilled25
07087810 00000004 D Cut25
07087814 00000004 D Controller15
07087818 00000004 D CloseWindowFilled20
0708781c 00000004 D CloseWindow20
07087820 00000004 D ClipboardFilled25
07087824 00000004 D Clipboard25
07087828 00000004 D ClearSymbolFilled15
0708782c 00000004 D ClearSymbol15
07087830 00000004 D CheckedCheckbox
07087834 00000004 D CapsLockOnFilled15
07087838 00000004 D CapsLockOn15
0708783c 00000004 D AddFavoriteFilled25
07087840 00000004 D AddFavorite25
07087844 00000004 D About15
07087848 00000001 D CTRPluginFramework::EventManager::_refresh
0708784c 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07087850 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07087854 00000004 d kCount
07087858 00000004 d kInterval
0708785c 00000004 d kDelay
07087860 00000004 D __cxxabiv1::__unexpected_handler
07087864 00000004 D __cxxabiv1::__terminate_handler
07087868 00000004 D _impure_ptr
07087870 00000120 D _impure_data
07087990 00000058 d tzinfo
070879e8 0000000c D __sglue
070879f4 00000004 D __malloc_sbrk_base
070879f8 00000004 D __malloc_trim_threshold
07087a00 00000408 D __malloc_av_
07087e08 00000008 D _tzname
07087e10 0000016c D __global_locale
07087f7c 00000004 D environ
07087f80 00001000 d handles
07088f80 0000000c d __stderr_handle
07088f8c 0000000c d __stdout_handle
07088f98 0000000c d __stdin_handle
07088fa4 0000008c D devoptab_list
07089044 d _GLOBAL_OFFSET_TABLE_
07089050 D __tdata_lma
0708905c d __frame_dummy_init_array_entry
0708905c D __init_array_start
0708905c B __preinit_array_end
0708905c B __preinit_array_start
0708905c D __tdata_lma_end
070890c4 d __do_global_dtors_aux_fini_array_entry
070890c4 D __init_array_end
07089120 D __bss_start__
07089120 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708912c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07089130 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07089134 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07089138 00000004 b ncsndMutex
0708913c 00000004 b ncsndCmdCurOff
07089140 00000004 b ncsndCmdStartOff
07089144 00000004 B ncsndSharedMem
07089148 00000004 B ncsndCSNDHandle
0708914c 00000004 b ncsndRefCount
07089150 00000004 B ncsndChannels
07089154 00000010 B ncsndOffsets
07089164 00000004 B ncsndSharedMemSize
07089168 00000004 b ncsndSharedMemBlock
0708916c 00000001 b ncsndCookieHooked
07089170 0000000c b ncsndCookie
0708917c b saved_stack
07089184 00000004 b cwavListCount
07089188 00000004 b cwavList
0708918c 00000004 b cwavAddedToList
07089190 b completed.1
07089194 b object.0
070891ac 00000004 b CTRPluginFramework::g_runningInstance
070891b0 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
070891cc 00000004 b g_onLoadCroLock
070891d0 00000004 b g_onSharedMemMapHook
070891d4 00000004 b g_onLoadCroHook
070891d8 00000008 b CTRPluginFramework::g_mainThread
070891e0 00000004 B CTRPluginFramework::g_keepEvent
070891e4 00000004 B CTRPluginFramework::g_keepThreadHandle
070891e8 00000004 B CTRPluginFramework::g_continueGameEvent
070891f0 00000008 B CTRPluginFramework::_sdmcArchive
070891f8 00001000 b CTRPluginFramework::keepThreadStack
0708a1f8 00000004 b g_mainThreadVars
0708a1fc 00000001 b properInit
0708a1fd 00000001 b fakeInit
0708a200 00000004 b plgLdrRefCount
0708a204 00000004 b plgReply
0708a208 00000004 b plgEvent
0708a20c 00000004 b plgLdrArbiter
0708a210 00000004 b plgLdrHandle
0708a214 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708a218 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708a21c 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708a224 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708a22c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708a230 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708a238 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708a240 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708a248 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708a24c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708a250 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708a254 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708a258 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708a25c 00000008 b CTRPluginFramework::g_sleepEvent
0708a268 00000008 B CTRPluginFramework::SystemImpl::FriendCode
0708a270 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708a274 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708a278 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708a27c 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708a27d 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708a27e 00000001 B _g_isCitra
0708a280 00000004 b CTRPluginFramework::isReady
0708a284 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708a28c 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708a294 00000008 B CTRPluginFramework::Screenshot::_task
0708a2a0 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708a2a8 00000008 B CTRPluginFramework::Screenshot::_timer
0708a2b0 00000004 B CTRPluginFramework::Screenshot::_display
0708a2b4 00000004 B CTRPluginFramework::Screenshot::_filecount
0708a2b8 00000004 B CTRPluginFramework::Screenshot::_mode
0708a2bc 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708a2c0 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708a2c8 00000008 B CTRPluginFramework::Screenshot::Timer
0708a2d0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708a2d4 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708a2d8 00000004 B CTRPluginFramework::ScreenImpl::Top
0708a2dc 000000ac b CTRPluginFramework::_botBuf
0708a388 000000ac b CTRPluginFramework::_topBuf
0708a434 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708a4dc 00000044 b CTRPluginFramework::g_previousException
0708a520 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708a524 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708a528 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708a530 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708a53c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708a548 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708a558 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708a55c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708a5c0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708a5c4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708a5c8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708a5d0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708a5d4 00000004 B CTRPluginFramework::ProcessImpl::Status
0708a5d8 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708a5dc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708a5e0 0000001c B CTRPluginFramework::HookManager::_singleton
0708a5fc 00000008 b CTRPluginFramework::Heap::g_heapPool
0708a604 0000000c b CTRPluginFramework::Heap::_mutex
0708a610 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708a614 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708a618 0000000c b sAddrMap
0708a624 0000000c B CTRPluginFramework::FSPath::FSMutex
0708a630 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708a634 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708a640 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708a644 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708a650 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708a654 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708a658 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708a65c 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a660 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a668 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708a670 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708a678 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708a67c 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708a684 00000004 b CTRPluginFramework::g_radioId
0708a688 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708a68c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708a690 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708a698 00000004 b CTRPluginFramework::__pmARinstance
0708a69c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708a6a0 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708a6a4 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708a6a8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708a6b0 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708a6b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708a6bc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708a6cc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a6d0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708a6d8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708a6dc 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708a6ec 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708a6f0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708a700 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708a704 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708a714 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708a718 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708a728 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708a72c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708a73c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708a748 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708a754 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708a760 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708a764 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708a774 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708a778 00000004 B CTRPluginFramework::__g_hexEditor
0708a77c 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708a780 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708a790 00000004 b CTRPluginFramework::__converter
0708a794 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708a7a4 00000028 B CTRPluginFramework::Window::TopWindow
0708a7cc 00000028 B CTRPluginFramework::Window::BottomWindow
0708a7f4 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708a7f8 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708a804 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708a808 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708a80c 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708a814 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708a815 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708a818 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708a828 00000050 b CTRPluginFramework::g_fpsCounter
0708a878 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708a880 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708a888 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708a890 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708a898 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708a8a0 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708a8a1 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708a8a2 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708a8a4 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708a8c4 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708a8d0 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708a8dc 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708a8e8 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708a90c 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708a918 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708a930 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708a948 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708a94c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708a950 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708a954 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708a958 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708a974 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708a978 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708a97c 0000000c B CTRPluginFramework::Font::_mutex
0708a988 00000004 B CTRPluginFramework::g_glyphAllocated
0708a98c 00000004 B CTRPluginFramework::g_fontAllocated
0708a990 00000004 b CTRPluginFramework::g_context
0708a994 00000001 b CTRPluginFramework::ToggleFloat
0708a995 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708a998 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708a99c 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708a9a0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708a9a4 00000008 B CTRPluginFramework::ARHandler::Storage
0708a9ac 00000010 B CTRPluginFramework::ARHandler::Data
0708a9bc 00000008 B CTRPluginFramework::ARHandler::Offset
0708a9c8 00000fa0 b CTRPluginFramework::arStack
0708b968 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b96c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708b978 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b97c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708b988 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708b989 00000001 b CTRPluginFramework::g_newCondDataToggle
0708b98a 00000001 b CTRPluginFramework::g_condAgainstData
0708b98c 00000004 b CTRPluginFramework::__arCodeEditor
0708b990 0000000c B CTRPluginFramework::g_codeTypes
0708b99c 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708b99d 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708b9a0 000000a8 B CTRPluginFramework::Preferences::Settings
0708ba48 00000008 B CTRPluginFramework::Preferences::Backlights
0708ba50 00000008 B CTRPluginFramework::Preferences::Flags
0708ba58 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708ba5c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708ba60 000009c4 b CTRPluginFramework::g_rng
0708c424 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708c428 00000018 b __threads
0708c440 0000000c b __mutex
0708c44c 00000004 B CTRPluginFramework::System::OnAbort
0708c450 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708c454 00000004 B CTRPluginFramework::Process::OnPauseResume
0708c458 00000004 B CTRPluginFramework::Process::exceptionCallback
0708c45c 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c460 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c464 00000004 B CTRPluginFramework::Controller::_keysDown
0708c468 0000001c b CTRPluginFramework::g_dummy
0708c484 00000180 b CTRPluginFramework::g_keyName
0708c604 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c608 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c60c 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c60e 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c610 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708c614 00000001 B CTRPluginFramework::EventManager::_isTouching
0708c618 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708c61c 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708c62c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708c630 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708c638 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708c63c 00000004 b CTRPluginFramework::g_screenshotEntry
0708c640 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708c644 00000004 b CTRPluginFramework::g_OpenFileLock
0708c648 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708c650 00000040 b CTRPluginFramework::g_hookExportFile
0708c690 00000004 b CTRPluginFramework::g_HookMode
0708c694 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708c698 00000008 b CTRPluginFramework::g_textXpos
0708c6a0 00000004 b CTRPluginFramework::g_mode
0708c6a4 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708c6a8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708c6b8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708c6bc 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708c6cc 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c6d0 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708c6e0 00000001 b CTRPluginFramework::g_progressLoop
0708c6e4 00000004 B CTRPluginFramework::_pool
0708c6e8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c6f0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708c6f8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c700 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708c708 00000004 b sharedFontAddr
0708c70c 00000004 B g_sharedFont
0708c710 00000004 b srvRefCount
0708c714 00000004 b srvHandle
0708c718 00000004 b arbiter
0708c71c 00000004 b currentAddr
0708c720 00000004 b maxAddr
0708c724 00000004 b minAddr
0708c728 00000004 b acRefCount
0708c72c 00000004 b acHandle
0708c730 00000004 b amRefCount
0708c734 00000004 b amHandle
0708c738 00000001 b flagValue.0
0708c739 00000001 b flagInit.1
0708c73c 00000004 b serviceName.6
0708c740 0000000c b aptFirstHook
0708c74c 00000004 b aptLockHandle
0708c750 00000004 b cfguRefCount
0708c754 00000004 b cfguHandle
0708c758 00000004 b frdRefCount
0708c75c 00000004 b frdHandle
0708c760 00000080 b fsExemptArchives
0708c7e0 00000004 b fsuRefCount
0708c7e4 00000004 b fsuHandle
0708c7e8 00000001 b gspRunEvents
0708c7ec 00000004 b gspEventThread
0708c7f0 00000004 b gspEvent
0708c7f4 00000001 b gspGpuRight
0708c7f8 00000004 b gspSharedMem
0708c7fc 00000004 b gspSharedMemHandle
0708c800 00000004 b gspRefCount
0708c804 00000004 b gspGpuHandle
0708c808 00000001 b usingIrrst
0708c80c 00000004 b hidRefCount
0708c810 00000006 b gRate
0708c818 00000006 b aVec
0708c820 00000004 b cPos
0708c824 00000004 b tPos
0708c828 00000004 b kRepeat
0708c82c 00000004 b kUp
0708c830 00000004 b kDown
0708c834 00000004 b kHeld
0708c838 00000004 b kOld
0708c83c 00000004 B hidSharedMem
0708c840 00000014 B hidEvents
0708c854 00000004 B hidMemHandle
0708c858 00000004 B hidHandle
0708c85c 00000004 b irrstRefCount
0708c860 00000004 b csPos
0708c864 00000004 b kHeld
0708c868 00000004 B irrstSharedMem
0708c86c 00000004 B irrstEvent
0708c870 00000004 B irrstMemHandle
0708c874 00000004 B irrstHandle
0708c878 00000004 b srvPmHandle
0708c87c 00000004 b __sslc_refcount
0708c880 00000004 B __sslc_servhandle
0708c884 00000004 V __ctru_heap_size
0708c888 00000004 B __ctru_linear_heap
0708c88c 00000004 B __ctru_heap
0708c890 00000004 b (anonymous namespace)::get_static_cond()::once
0708c898 00000008 b (anonymous namespace)::fake_cond
0708c8a0 00000004 b (anonymous namespace)::static_cond
0708c8a4 00000004 b (anonymous namespace)::get_static_mutex()::once
0708c8a8 00000010 b (anonymous namespace)::fake_mutex
0708c8b8 00000004 b (anonymous namespace)::static_mutex
0708c8bc 00000004 b (anonymous namespace)::__new_handler
0708c8c0 0000001c b (anonymous namespace)::emergency_pool
0708c8dc 00000004 b init
0708c8e0 00000001 B __eh_globals_init::_S_init
0708c8e4 0000000c b (anonymous namespace)::eh_globals
0708c8f0 00000010 V std::string::_Rep::_S_empty_rep_storage
0708c900 0000000c b __sfp_recursive_mutex
0708c910 00000168 B __sf
0708ca78 00000004 B __stdio_exit_handler
0708ca7c 00000004 b __tz_mutex
0708ca80 00000028 B __malloc_current_mallinfo
0708caa8 00000004 B __malloc_max_total_mem
0708caac 00000004 B __malloc_max_sbrked_mem
0708cab0 00000004 B __malloc_top_pad
0708cab4 00000004 b prev_tzenv
0708cab8 0000000c b __tzname_dst
0708cac4 0000000c b __tzname_std
0708cad0 0000000c b __malloc_recursive_mutex
0708cadc 00000004 B _timezone
0708cae0 00000004 B _daylight
0708cae4 0000000c b __env_recursive_mutex
0708caf0 00000004 b initial_env
0708caf4 00000190 B __atexit0
0708cc84 00000004 B __atexit
0708cc88 0000000c B __atexit_recursive_mutex
0708cc94 00000004 b __hndl_lock
0708cc98 00000004 B fake_heap_start
0708cc9c 00000004 B fake_heap_end
0708cca0 00000004 b heap_start.0
0708cca4 B __tls_start
0708ccd0 B __bss_end__
0708ccd0 A __end__
0708ccd0 B __tls_end
